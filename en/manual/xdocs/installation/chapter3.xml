<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="chapter3" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mml="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Pre-installation Task 2 - Server Environment Configuration</title>

  <para>This chapter describes how to install server-side software as part of
  the pre-installation tasks for installing eformsign.</para>

  <para>The installation is command-based and proceeds in the order of web
  server, WAS, and DB. The installation order is the same for all OS.</para>

  <figure>
    <title>Installation Order</title>

    <mediaobject>
      <imageobject>
        <imagedata fileref="resources/install_order.png" width="700"/>
      </imageobject>
    </mediaobject>
  </figure>

  <para/>

  <section xml:id="webserver_install">
    <title>Installing the Web Server</title>

    <para>This section describes how to install the web server and verify its
    installation.</para>

    <para>eformsign uses nginx<indexterm class="singular">
        <primary>nginx</primary>
      </indexterm> as the web server.</para>

    <note>
      <para>The recommended nginx version is 1.14.2.</para>
    </note>

    <section>
      <title>Installing nginx</title>

      <para>The nginx installation process is as follows.</para>

      <orderedlist>
        <listitem>
          <para>Create a repository.</para>

          <itemizedlist>
            <listitem>
              <para>RHEL 7</para>

              <para><programlisting>$ vi /etc/yum.repos.d/nginx.repo
[nginx]
name=nginx repo
baseurl=https://nginx.org/packages/<emphasis role="bold">rhel</emphasis>/7/$basearch/
gpgcheck=0
enabled=1</programlisting></para>
            </listitem>

            <listitem>
              <para>CentOS 7</para>

              <para><programlisting>$ vi /etc/yum.repos.d/nginx.repo

[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/<emphasis role="bold">centos</emphasis>/7/$basearch/
gpgcheck=0
enabled=1</programlisting></para>

              <note>
                <para>Create a repository only in RHEL 7 and CentOS 7.</para>
              </note>
            </listitem>
          </itemizedlist>

          <para/>
        </listitem>

        <listitem>
          <para>Install nginx.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7 / CentOS 7</para>

                <para><programlisting>$ yum install nginx -y</programlisting></para>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$ apt install nginx -y</programlisting></para>

                <note>
                  <para>RHEL and CentOS (both are Red Hat-based) both use the
                  <emphasis role="bold">yum</emphasis> command, and Debian (in
                  which Ubuntu is derived from) uses the <emphasis
                  role="bold">apt</emphasis> command.</para>
                </note>
              </listitem>
            </itemizedlist></para>

          <para/>
        </listitem>

        <listitem>
          <para>Execute nginx.</para>

          <para>Execute ngix using the following command regardless of the OS
          .</para>

          <para><programlisting>$ service nginx start</programlisting></para>
        </listitem>

        <listitem>
          <para>Open the firewall.</para>

          <para>The method for opening the firewall and port differs for RHEL
          7, CentOS, and Debian 10.</para>

          <para>Open the firewall in the method appropriate for each
          OS.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7/CentOS 7</para>

                <para>1. Check if the firewall is running.</para>

                <para><programlisting>$ systemctl status firewalld.service</programlisting></para>

                <para>2. Check the default zone.</para>

                <para><programlisting>$ firewall-cmd --get-default-zone</programlisting>3.
                Check for active zones.</para>

                <para><programlisting>$ firewall-cmd --get-active-zone</programlisting>4.
                Check for open ports.</para>

                <para><programlisting>$ firewall-cmd --list-ports</programlisting>5.
                Open port number 80.</para>

                <para><programlisting>$ firewall-cmd --permanent --zone=public --add-port=80/tcp</programlisting>6.
                Restart the firewall.</para>

                <programlisting>$ firewall-cmd --reload</programlisting>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para>1. Check for open ports.</para>

                <para><programlisting>$ iptables -L</programlisting></para>

                <para>2. Open port number 80.</para>

                <para><programlisting>$ iptables -I INPUT -p tcp --dport 80 -j ACCEPT</programlisting>3.
                Allow firewall settings to be applied automatically at boot
                time.</para>

                <para><programlisting>$ apt install iptables-persistent
$ netfilter-persistent save
$ netfilter-persistent reload
</programlisting></para>

                <para/>
              </listitem>
            </itemizedlist></para>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Verifying the Installation</title>

      <para>Enter your IP address in a web browser.</para>

      <para>If the following screen is displayed, then the installation is
      successfully completed.</para>

      <para/>

      <figure>
        <title>nginx Installation Verification Screen</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/Nginx_install_check.png" width="750"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section xml:id="unix-install-webtob">
    <title>Installing WAS</title>

    <para>This section describes how to install WAS and verify its
    installation.</para>

    <para>eformsign uses Tomcat<indexterm class="singular">
        <primary>Tomcat</primary>
      </indexterm> as the WAS.</para>

    <note>
      <para>The recommended Tomcat version is 8.5.</para>
    </note>

    <section>
      <title>Installing Tomcat</title>

      <para>The Tomcat installation process is as follows.</para>

      <orderedlist>
        <listitem>
          <para>Install Tomcat by executing the following commands for each
          OS.</para>

          <itemizedlist>
            <listitem>
              <para>RHEL 7</para>

              <para><programlisting>$ cd /opt
$ yum install wget unzip -y
$ wget https://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.54/bin/apache-tomcat-8.5.54.zip
$ unzip apache-tomcat-8.5.54.zip</programlisting></para>
            </listitem>

            <listitem>
              <para>CentOS 7</para>

              <para><programlisting>$ yum -y install tomcat
$ yum install -y tomcat-webapps tomcat-admin-webapps</programlisting></para>
            </listitem>

            <listitem>
              <para>Debian 10</para>

              <para><programlisting>$ useradd -m -U -d /opt/tomcat -s /bin/false tomcat
$ cd /tmp
$ wget http://apache.mirror.cdnetworks.com/tomcat/tomcat-8/v8.5.54/bin/apache-tomcat-8.5.54.tar.gz
$ tar -xf apache-tomcat-8.5.54.tar.gz
$ mv apache-tomcat-8.5.54 /opt/tomcat/
$ ln -s /opt/tomcat/apache-tomcat-8.5.54 /opt/tomcat/latest
</programlisting></para>
            </listitem>
          </itemizedlist>

          <para/>
        </listitem>

        <listitem>
          <para>Configure the basic settings and create a user.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7</para>

                <para><programlisting>$ ln -s /opt/apache-tomcat-8.5.54 /opt/tomcat
$ ln -s /opt/tomcat/logs /var/log/tomcat
$ useradd tomcat
$ chown â€“R tomcat:tomcat /opt/apache-tomcat-8.5.54
$ chown -R tomcat:tomcat /opt/tomcat
$ chown -R tomcat:tomcat /var/log/tomcat
$ chmod +x /opt/tomcat/bin/*.sh
</programlisting></para>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$ chown -R tomcat: /opt/tomcat
$ sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'
</programlisting></para>
              </listitem>
            </itemizedlist></para>

          <para><note>
              <para>This process is performed only in RHEL 7 and Debian
              10.</para>
            </note></para>
        </listitem>

        <listitem>
          <para>Create a service file.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7</para>

                <para><programlisting>$vi /etc/systemd/system/tomcat.service
[Unit]
Description=Tomcat
After=syslog.target network.target
  
[Service]
Type=forking
  
User=tomcat
Group=tomcat
  
ExecStart=/opt/tomcat/bin/catalina.sh start
ExecStop=/opt/tomcat/bin/catalina.sh stop
  
[Install]
WantedBy=multi-user.target</programlisting></para>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$vi /etc/systemd/system/tomcat.service
[Unit]
Description=Tomcat 8.5 servlet container
After=network.target
  
[Service]
Type=forking
  
User=tomcat
Group=tomcat
  
Environment="JAVA_HOME=/usr/lib/jvm/adoptopenjdk-8-hotspot-amd64"
Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom"
  
Environment="CATALINA_BASE=/opt/tomcat/latest"
Environment="CATALINA_HOME=/opt/tomcat/latest"
Environment="CATALINA_PID=/opt/tomcat/latest/temp/tomcat.pid"
Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
  
ExecStart=/opt/tomcat/latest/bin/startup.sh
ExecStop=/opt/tomcat/latest/bin/shutdown.sh
  
[Install]
WantedBy=multi-user.target</programlisting></para>
              </listitem>
            </itemizedlist></para>

          <para><note>
              <para>This process is performed only in RHEL 7 and Debian
              10.</para>
            </note></para>
        </listitem>

        <listitem>
          <para>Reload the service file created with the following
          command.</para>

          <para><programlisting>$ systemctl daemon-reload</programlisting></para>
        </listitem>

        <listitem>
          <para>Open the firewall.</para>

          <para>The method for opening the firewall and port differs between
          RHEL 7/CentOS 7 and Debian 10, but the port number is 8080 for all
          of them.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7/CentOS 7</para>

                <programlisting>$ firewall-cmd --zone=public --add-port=8080/tcp --permanent
$ firewall-cmd --reload</programlisting>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$ iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
$ netfilter-persistent save
$ netfilter-persistent reload
</programlisting></para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para>Execute Tomcat.</para>

          <para>Execute Tomcat with the following command, regardless of the
          OS.</para>

          <para><programlisting>$ service tomcat start</programlisting></para>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Verifying the Installation</title>

      <para>Enter your IP address in a web browser. </para>

      <para>If the following screen is displayed, then the installation is
      successfully completed.</para>

      <para/>

      <figure>
        <title>Tomcat Installation Verification Screen</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/Tomcat_install_check.png"
                       width="750"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section xml:id="db_install">
    <title>Installing the DB</title>

    <para>This section describes how to install the DB and verify its
    installation.</para>

    <para>eformsign uses CouchDB<indexterm class="singular">
        <primary>CouchDB</primary>
      </indexterm> as the DB.</para>

    <note>
      <para>The recommended CouchDB version is 3.0.</para>
    </note>

    <section>
      <title>Installing CouchDB</title>

      <para>The CouchDB installation process is as follows.</para>

      <orderedlist>
        <listitem>
          <para>Create the EPEL Repository.</para>

          <itemizedlist>
            <listitem>
              <para>RHEL 7/CentOS 7</para>

              <para><programlisting>$ yum update -y
$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
$ yum install -y epel-release-latest-7.noarch.rpm</programlisting></para>
            </listitem>
          </itemizedlist>

          <para><note>
              <para>EPEL is short for Extra Packages of Enterprise Linux and
              is a repository provided by Fedora Project. It is a
              community-based storage that provides the latest version of
              various packages. It can be used to install and use the packages
              in the latest version that cannot be installed using the
              <emphasis role="bold">yum</emphasis> command.</para>
            </note></para>
        </listitem>

        <listitem>
          <para>Enable the CouchDB package repository.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7/CentOS 7</para>

                <para><programlisting>$ vi /etc/yum.repos.d/bintray-apache-couchdb-rpm.repo
[bintray--apache-couchdb-rpm]
name=bintray--apache-couchdb-rpm
baseurl=http://apache.bintray.com/couchdb-rpm/el7/$basearch/
gpgcheck=0
repo_gpgcheck=0
enabled=1</programlisting></para>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$ apt-get install -y apt-transport-https gnupg ca-certificates
$ echo "deb https://apache.bintray.com/couchdb-deb buster main" \
    | sudo tee -a /etc/apt/sources.list.d/couchdb.list</programlisting></para>
              </listitem>
            </itemizedlist></para>

          <para/>
        </listitem>

        <listitem>
          <para>Install the CouchDB package.</para>

          <para><itemizedlist>
              <listitem>
                <para>RHEL 7/CentOS 7</para>

                <para><programlisting>$ yum -y install epel-release &amp;&amp; sudo yum -y install couchdb</programlisting></para>
              </listitem>

              <listitem>
                <para>Debian 10</para>

                <para><programlisting>$ apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
  8756C4F765C9AC3CB6B85D62379CE192D401AB61
$ apt update
$ apt install -y couchdb
</programlisting></para>
              </listitem>
            </itemizedlist></para>

          <para>4. When prompted to select a CouchDB type during installation,
          select <emphasis role="bold">none</emphasis>.</para>

          <para/>

          <figure>
            <title>The CouchDB Type Selection Window</title>

            <mediaobject>
              <imageobject>
                <imagedata fileref="resources/couchdb_none.png" width="700"/>
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Default Settings</title>

      <para>Modify the local.ini<indexterm class="singular">
          <primary>local.ini</primary>
        </indexterm> file and the default.ini<indexterm class="singular">
          <primary>default.ini</primary>
        </indexterm> file as follows. The method is the same for all
      OS.</para>

      <para><itemizedlist>
          <listitem>
            <para>local.ini file</para>

            <para><programlisting>$ vi /opt/couchdb/etc/local.ini
[admins]
admin = mysecretpassword // Remove the [admins] comment at the bottom and change the ID and PW to the ones you want.</programlisting></para>
          </listitem>

          <listitem>
            <para>default.ini file</para>

            <para><programlisting>$ vi /opt/couchdb/etc/default.ini
[cluster]
q=2             // Change the q=2, n=3 in the middle [cluster] to q=2, n=1(search using /cluster)
n=1            
...
[chttpd]
port = 8308     // Change port = 5984 to port = 8308.

</programlisting></para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>Verifying the Installation</title>

      <para>Check the connection by running CouchDB.</para>

      <para><itemizedlist>
          <listitem>
            <para>Run the DB.</para>

            <para><programlisting>$ service couchdb start</programlisting></para>
          </listitem>

          <listitem>
            <para>Check the connection.</para>

            <para><programlisting>$ curl http://localhost:8308</programlisting></para>
          </listitem>
        </itemizedlist></para>
    </section>
  </section>
</chapter>
